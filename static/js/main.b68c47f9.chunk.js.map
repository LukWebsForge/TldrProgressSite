{"version":3,"sources":["ThemeType.tsx","Data.tsx","tldrPageUrl.tsx","Table.tsx","AppLoader.tsx","useEscClose.tsx","useKeyPress.tsx","ErrorMessage.tsx","AppFooter.tsx","IconActionHelp.tsx","IconActionTheme.tsx","IconActionJump.tsx","IconActionFilter.tsx","IconActionHighlight.tsx","IconActionSearch.tsx","IconActions.tsx","App.tsx","index.tsx"],"names":["ThemeType","ThemeTypeContext","createContext","themeType","Light","setThemeType","ThemeTypeProvider","props","useState","webStorageThemeTypeKey","useEffect","stored","localStorage","getItem","Dark","window","matchMedia","isDark","matches","Provider","value","setItem","children","TranslationStatus","DataContext","data","error","highlighted","Set","setHighlighted","DataFetcher","setError","isLoaded","setIsLoaded","setData","webStorageHighlightedKey","fetch","then","async","r","ok","Error","status","statusText","json","result","toString","JSON","parse","provided","loading","languages","stringify","Array","from","FileAction","tldrPageUrl","action","os","page","language","baseUrl","filePath","Create","View","DataTable","className","DataTableHeader","DataTableBody","useContext","languageRows","map","lang","classNames","length","has","osSections","Object","keys","entries","DataTableOSHeader","DataTableOSPages","osProgress","progress","percentages","id","osPages","pages","DataTableOSPageRow","pageName","pageData","handleClick","win","open","focus","cells","onClick","symbol","Translated","Outdated","AppLoader","style","padding","useEscClose","visible","setVisible","targetKey","onPressed","onKeyDown","useCallback","event","key","addEventListener","removeEventListener","useKeyPress","undefined","ErrorMessage","bindings","useModal","type","verticalAlign","cursor","size","width","Title","Subtitle","Content","overflow","block","AppFooter","gitInfo","version","tags","commit","shortHash","commitUrl","hash","p","icon","href","target","UpdateTime","last_update","HelpContent","h3","IconActionHelp","text","enterDelay","IconActionTheme","placement","side","IconActionJump","content","push","Item","title","trigger","FilterType","FilterSelection","setType","initial","setLanguage","languageOptions","Option","inline","y","initialValue","onChange","FilteredPageList","empty","attributes","NotTranslated","elements","color","minHeight","FilteredData","filtered","useMemo","filter","osName","osStatus","add","filterData","pageNumber","setPageNumber","slice","count","Math","ceil","initialPage","FilterUI","initialAttributes","setAttributes","IconActionFilter","HighlightCheckboxes","checkboxes","xs","Group","Container","justify","gap","IconActionHighlight","tmpHighlighted","setTmpHighlighted","saving","setSaving","selected","Action","passive","IconActionSearch","setToast","useToasts","hotkey","isIOS","isMacOs","command","toastText","IconActions","ref","inView","useInView","floatingClasses","direction","App","GeistApp","useThemeType","Header","h1","Footer","position","ReactDOM","document","querySelector"],"mappings":"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","file":"static/js/main.b68c47f9.chunk.js","sourcesContent":["import { createContext, PropsWithChildren, useContext, useEffect, useState } from 'react'\n\nenum ThemeType {\n  Light = 'light',\n  Dark = 'dark',\n}\n\nconst ThemeTypeContext = createContext<{\n  themeType: ThemeType\n  setThemeType: (themeType: ThemeType) => void\n}>({\n  themeType: ThemeType.Light,\n  setThemeType: () => {},\n})\n\nconst ThemeTypeProvider = (props: PropsWithChildren<{}>) => {\n  const [themeType, setThemeType] = useState(ThemeType.Light)\n  const webStorageThemeTypeKey = 'theme-type'\n\n  // Fetch the user preference using the Web Storage API or determine the system theme\n  useEffect(() => {\n    const stored = localStorage.getItem(webStorageThemeTypeKey)\n    if (stored === ThemeType.Light || stored === ThemeType.Dark) {\n      setThemeType(stored)\n    } else if (window && typeof window.matchMedia === 'function') {\n      // Inspired by: https://github.com/xcv58/use-system-theme/blob/master/src/index.tsx\n      const isDark = window.matchMedia('(prefers-color-scheme: dark)').matches\n      setThemeType(isDark ? ThemeType.Dark : ThemeType.Light)\n    }\n  }, [])\n\n  const setPersistentThemeType = (themeType: ThemeType) => {\n    setThemeType(themeType)\n    localStorage.setItem(webStorageThemeTypeKey, themeType)\n  }\n\n  return (\n    <ThemeTypeContext.Provider value={{ themeType, setThemeType: setPersistentThemeType }}>\n      {props.children}\n    </ThemeTypeContext.Provider>\n  )\n}\n\nconst useThemeType = () => {\n  const { themeType } = useContext(ThemeTypeContext)\n  return themeType\n}\n\nexport { ThemeType, ThemeTypeContext, ThemeTypeProvider, useThemeType }\n","import { ReactElement, createContext, useEffect, useState, PropsWithChildren } from 'react'\n\n// https://reactjs.org/docs/faq-ajax.html\n// https://reactjs.org/docs/hooks-reference.html#usecontext\n\nenum TranslationStatus {\n  Outdated = 1,\n  Translated = 2,\n}\n\ntype OperatingSystem = string\ntype Language = string\ntype PageName = string\n\ninterface TranslationData {\n  last_update: string\n  languages: Language[]\n  entries: Record<OperatingSystem, TranslationOS>\n}\n\ninterface TranslationOS {\n  progress: Record<Language, number>\n  pages: Record<PageName, TranslationPage>\n}\n\ninterface TranslationPage {\n  status: Record<Language, TranslationStatus>\n}\n\nconst DataContext = createContext<{\n  data: TranslationData | null\n  error: string | null\n  highlighted: Set<Language>\n  setHighlighted: (languages: Language[]) => void\n}>({ data: null, error: null, highlighted: new Set(), setHighlighted: () => {} })\n\nconst DataFetcher = (props: PropsWithChildren<{ error: ReactElement; loading: ReactElement }>) => {\n  const [error, setError] = useState<string | null>(null)\n  const [isLoaded, setIsLoaded] = useState<boolean>(false)\n  const [data, setData] = useState<TranslationData | null>(null)\n  const [highlighted, setHighlighted] = useState<Set<Language>>(new Set())\n  const webStorageHighlightedKey = 'language-highlighted'\n\n  // Fetch the data.json file\n  useEffect(() => {\n    fetch('data.json')\n      .then(async (r) => {\n        if (!r.ok) {\n          throw new Error(r.status + ': ' + r.statusText)\n        }\n\n        return r.json()\n      })\n      .then(\n        (result) => {\n          setData(result as TranslationData)\n          setIsLoaded(true)\n        },\n        (error) => {\n          setError(error.toString())\n          setIsLoaded(true)\n        }\n      )\n  }, [])\n  // [] = only run on component mount\n\n  // Fetch the user preferences using the Web Storage API\n  useEffect(() => {\n    const stored = localStorage.getItem(webStorageHighlightedKey)\n    if (stored) {\n      setHighlighted(new Set(JSON.parse(stored)))\n    }\n  }, [])\n\n  const setHighlightedExternal = (languages: Language[]) => {\n    // Convert the array to a set for better performance and broadcast the change\n    // See: https://stackoverflow.com/a/57277566/4106848\n    setHighlighted(new Set(languages))\n    // Persist the user selection of highlighted columns\n    localStorage.setItem(webStorageHighlightedKey, JSON.stringify(Array.from(languages)))\n  }\n\n  if (error) {\n    const provided = {\n      data: null,\n      error: error,\n      highlighted: new Set<Language>(),\n      setHighlighted: () => {},\n    }\n    return <DataContext.Provider value={provided}>{props.error}</DataContext.Provider>\n  }\n\n  if (!isLoaded) {\n    return props.loading\n  }\n\n  const provided = {\n    data: data,\n    error: null,\n    highlighted: highlighted,\n    setHighlighted: setHighlightedExternal,\n  }\n  return <DataContext.Provider value={provided}>{props.children}</DataContext.Provider>\n}\n\nexport { DataFetcher, DataContext, TranslationStatus }\nexport type { TranslationData, OperatingSystem, Language, PageName }\n","enum FileAction {\n  View,\n  Create,\n}\n\nfunction tldrPageUrl(action: FileAction, os: string, page: string, language: string) {\n  const languageSuffix = language === 'en' ? '' : '.' + language\n\n  const baseUrl = 'https://github.com/tldr-pages/tldr'\n  const filePath = `/main/pages${languageSuffix}/${os}/${page}.md`\n\n  if (action === FileAction.Create) {\n    return baseUrl + '/new' + filePath + `?filename=${page}.md`\n  }\n\n  if (action === FileAction.View) {\n    return baseUrl + '/blob' + filePath\n  }\n\n  throw new Error('Unknown FileAction: ' + action)\n}\n\nexport { FileAction, tldrPageUrl }\n","import { Fragment, useContext } from 'react'\nimport { DataContext, OperatingSystem, TranslationStatus } from './Data'\nimport { FileAction, tldrPageUrl } from './tldrPageUrl'\nimport './Table.css'\n\nconst DataTable = () => (\n  <table className=\"text-center\">\n    <DataTableHeader />\n    <DataTableBody />\n  </table>\n)\n\nconst DataTableHeader = () => {\n  const { data, highlighted } = useContext(DataContext)\n\n  // We're applying the sticky class to each <th>, because Chrome does not support sticky on <thead> and <tr>\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=702927\n  const languageRows = data?.languages.map((lang) => {\n    let classNames = 'vertical-padding sticky bg-white-transparent'\n    if (lang.length > 3) {\n      classNames += ' small-font'\n    }\n    if (highlighted.has(lang)) {\n      classNames += ' highlighted'\n    }\n\n    return (\n      <th key={lang} className={classNames}>\n        {lang}\n      </th>\n    )\n  })\n\n  return (\n    <thead>\n      <tr>\n        <th className=\"vertical-padding bg-white-transparent\">page</th>\n        {languageRows}\n      </tr>\n    </thead>\n  )\n}\n\nconst DataTableBody = () => {\n  const { data } = useContext(DataContext)\n\n  const osSections = Object.keys(data!.entries).map((os) => (\n    <Fragment key={os}>\n      <DataTableOSHeader os={os} />\n      <DataTableOSPages os={os} />\n    </Fragment>\n  ))\n\n  return <tbody>{osSections}</tbody>\n}\n\nconst DataTableOSHeader = (props: { os: OperatingSystem }) => {\n  const { data, highlighted } = useContext(DataContext)\n  const osProgress = data!.entries[props.os].progress\n\n  const percentages = data!.languages.map((lang) => {\n    let classNames = 'vertical-padding small-font'\n\n    if (highlighted.has(lang)) {\n      classNames += ' highlighted'\n    }\n\n    return (\n      <td key={lang} className={classNames}>\n        {osProgress[lang]}%\n      </td>\n    )\n  })\n\n  return (\n    <tr className=\"background-blue\" id={props.os}>\n      <th className=\"sticky bg-white-opaque zero-padding\">\n        <div className=\"vertical-padding background-blue\">{props.os}</div>\n      </th>\n      {percentages}\n    </tr>\n  )\n}\n\nconst DataTableOSPages = (props: { os: OperatingSystem }) => {\n  const { data } = useContext(DataContext)\n  const osPages = data!.entries[props.os].pages\n\n  const pages = Object.keys(osPages).map((page) => (\n    <DataTableOSPageRow key={page} os={props.os} pageName={page} />\n  ))\n\n  return <>{pages}</>\n}\n\nconst DataTableOSPageRow = (props: { os: OperatingSystem; pageName: string }) => {\n  const { data, highlighted } = useContext(DataContext)\n  const pageData = data!.entries[props.os].pages[props.pageName]\n\n  function handleClick(action: FileAction, language: string) {\n    const win = window.open(tldrPageUrl(action, props.os, props.pageName, language))\n    if (win != null) {\n      win.focus()\n    }\n  }\n\n  // Pick symbols from: https://rsms.me/inter/#charset\n  const cells = data!.languages.map((lang) => {\n    let classNames = 'cursor-pointer'\n    let onClick = null\n    let symbol = '?'\n\n    if (lang in pageData.status) {\n      const status = pageData.status[lang]\n      switch (status) {\n        case TranslationStatus.Translated:\n          classNames += ' background-green'\n          onClick = () => handleClick(FileAction.View, lang)\n          symbol = '✓'\n          break\n        case TranslationStatus.Outdated:\n          classNames += ' background-yellow'\n          onClick = () => handleClick(FileAction.View, lang)\n          symbol = '◇'\n          break\n      }\n    } else {\n      classNames += ' background-red'\n      onClick = () => handleClick(FileAction.Create, lang)\n      symbol = '✗'\n    }\n\n    if (highlighted.has(lang)) {\n      classNames += ' highlighted'\n    }\n\n    return (\n      <td key={lang} className={classNames} onClick={onClick}>\n        {symbol}\n      </td>\n    )\n  })\n\n  return (\n    <tr>\n      <td className=\"text-left\">{props.pageName}</td>\n      {cells}\n    </tr>\n  )\n}\n\nexport { DataTable }\n","import { Loading, Row } from '@geist-ui/react'\n\nconst AppLoader = () => (\n  <Row style={{ padding: '10px 0' }}>\n    <Loading>Loading</Loading>\n  </Row>\n)\n\nexport { AppLoader }\n","import { useKeyPress } from './useKeyPress'\n\nfunction useEscClose(visible: boolean, setVisible: (value: boolean) => void) {\n  useKeyPress(\n    'Escape',\n    visible\n      ? () => {\n          setVisible(false)\n        }\n      : undefined\n  )\n}\n\nexport { useEscClose }\n","import { useCallback, useEffect } from 'react'\n\n// Inspired by https://usehooks.com/useKeyPress/\n\nfunction useKeyPress(targetKey: string, onPressed?: () => void) {\n  // Only triggered if the callback is defined and the target key is pressed\n  const onKeyDown = useCallback(\n    (event: KeyboardEvent) => {\n      if (onPressed && event.key === targetKey) {\n        onPressed()\n      }\n    },\n    [targetKey, onPressed]\n  )\n\n  useEffect(() => {\n    if (onPressed) {\n      // Register event listener\n      window.addEventListener('keydown', onKeyDown)\n      // Remove event listener on cleanup\n      return () => {\n        window.removeEventListener('keydown', onKeyDown)\n      }\n    }\n  }, [onPressed, onKeyDown])\n}\n\nexport { useKeyPress }\n","import { useContext } from 'react'\nimport { Code, Modal, Note, useModal } from '@geist-ui/react'\nimport { Info } from '@geist-ui/react-icons'\nimport { DataContext } from './Data'\nimport { useEscClose } from './useEscClose'\n\nconst ErrorMessage = () => {\n  const { error } = useContext(DataContext)\n  const { visible, setVisible, bindings } = useModal()\n  useEscClose(visible, setVisible)\n\n  return (\n    <>\n      <Note type=\"error\">\n        Can't fetch the translation progress data from GitHub\n        <span style={{ verticalAlign: 'middle', cursor: 'pointer' }}>\n          {' '}\n          <Info\n            size={16}\n            onClick={() => {\n              setVisible(true)\n            }}\n          />\n        </span>\n      </Note>\n      <Modal {...bindings} width=\"50rem\">\n        <Modal.Title>Error</Modal.Title>\n        <Modal.Subtitle>Can't fetch the data from GitHub</Modal.Subtitle>\n        <Modal.Content style={{ overflow: 'auto' }}>\n          <Code block width=\"100%\">\n            {error}\n          </Code>\n        </Modal.Content>\n      </Modal>\n    </>\n  )\n}\n\nexport { ErrorMessage }\n","import { Link, Text } from '@geist-ui/react'\nimport GitInfo from 'react-git-info/macro'\n\nconst AppFooter = () => {\n  const gitInfo = GitInfo()\n  const version = gitInfo.tags.length > 0 ? gitInfo.tags[0] : gitInfo.commit.shortHash\n  const commitUrl = 'https://github.com/LukWebsForge/TldrProgress/commit/' + gitInfo.commit.hash\n\n  return (\n    <Text p>\n      Generated by{' '}\n      <Link icon href=\"https://github.com/LukWebsForge/TldrProgress\" target=\"_blank\">\n        tldr-translation-progress\n      </Link>{' '}\n      • Version{' '}\n      <Link href={commitUrl} target=\"_blank\">\n        {version}\n      </Link>{' '}\n      • Thanks for using this site\n    </Text>\n  )\n}\n\nexport { AppFooter }\n","import { useContext } from 'react'\nimport {\n  ArrowDownCircle,\n  Bookmark,\n  Filter,\n  HelpCircle,\n  Moon,\n  Search,\n  Sun,\n} from '@geist-ui/react-icons'\nimport { Link, Modal, Text, Tooltip, useModal } from '@geist-ui/react'\nimport { DataContext } from './Data'\nimport { useEscClose } from './useEscClose'\n\nconst UpdateTime = () => {\n  const { data } = useContext(DataContext)\n  return <span>{data?.last_update}</span>\n}\n\nconst HelpContent = () => (\n  <>\n    <Text h3>the tldr-pages project</Text>\n    <Text p>\n      The{' '}\n      <Link icon href=\"https://tldr.sh/\" target=\"_blank\">\n        tldr-pages project\n      </Link>{' '}\n      provides a collection of community-maintained help pages for command-line tools.\n    </Text>\n    <Text h3>this website</Text>\n    <Text p>\n      The main feature of this website is a table which lists the translation status for all tldr\n      pages. You can click every status icon (legend) and you'll be taken to the respective page on\n      GitHub or to a dialogue to create a new one.\n    </Text>\n    <Text p>\n      The pages are grouped by operating system and are sorted in alphabetical order. Each blue row\n      marks the start of the next group and shows its percentage of pages translated (an outdated\n      page counts as translated).\n    </Text>\n    <Text p>\n      The underlying dataset is based on the{' '}\n      <Link icon href=\"https://github.com/tldr-pages/tldr\" target=\"_blank\">\n        main\n      </Link>\n      branch of the tldr-pages/tldr repository and is scheduled to be updated every day at midnight\n      (UTC). The last update was performed on <UpdateTime />.\n    </Text>\n    <Text h3>actions</Text>\n    <Text p>\n      <HelpCircle size={20} className=\"vertical-align-icons\" /> - get help (this page) <br />\n      <Moon size={20} className=\"vertical-align-icons\" /> - switch to the dark mode <br />\n      <Sun size={20} className=\"vertical-align-icons\" /> - switch to the light mode <br />\n      <ArrowDownCircle size={20} className=\"vertical-align-icons\" /> - jump to a section of an\n      operating system <br />\n      <Filter size={20} className=\"vertical-align-icons\" /> - filter for not yet translated or\n      outdated pages in a given language <br />\n      <Bookmark size={20} className=\"vertical-align-icons\" /> - select preferred columns to be\n      highlighted <br />\n      <Search size={20} className=\"vertical-align-icons\" /> - information on how to search the table{' '}\n      <br />\n    </Text>\n    <Text h3>legend</Text>\n    <Text p>\n      ✓ - up-to-date translation (or source) <br />\n      <span className=\"small-font\">◇</span> - outdated translation <br />\n      ✗ - not yet translated <br />\n    </Text>\n    <Text h3>ideas?</Text>\n    <Text p>\n      Feel free to drop an issue or even a pull request at the{' '}\n      <Link icon href=\"https://github.com/LukWebsForge/TldrProgress\" target=\"_blank\">\n        tldr progress\n      </Link>\n      repository.\n    </Text>\n  </>\n)\n\nconst IconActionHelp = () => {\n  const { visible, setVisible, bindings } = useModal()\n  useEscClose(visible, setVisible)\n\n  return (\n    <>\n      <Tooltip text=\"Help\" enterDelay={0}>\n        <HelpCircle\n          className=\"cursor-pointer\"\n          size={28}\n          onClick={() => {\n            setVisible(true)\n          }}\n        />\n      </Tooltip>\n      <Modal {...bindings} width=\"1000px\">\n        <Modal.Title>Information</Modal.Title>\n        <Modal.Subtitle>about this project</Modal.Subtitle>\n        <Modal.Content>\n          <HelpContent />\n        </Modal.Content>\n      </Modal>\n    </>\n  )\n}\n\nexport { IconActionHelp }\n","import { useContext } from 'react'\nimport { Tooltip } from '@geist-ui/react'\nimport { Moon, Sun } from '@geist-ui/react-icons'\nimport { ThemeType, ThemeTypeContext } from './ThemeType'\n\nconst IconActionTheme = (props: { side?: boolean }) => {\n  const { themeType, setThemeType } = useContext(ThemeTypeContext)\n\n  const placement = props.side ? 'left' : 'top'\n  const icon =\n    themeType === ThemeType.Light ? (\n      <Moon className=\"cursor-pointer\" size={28} onClick={() => setThemeType(ThemeType.Dark)} />\n    ) : (\n      <Sun className=\"cursor-pointer\" size={28} onClick={() => setThemeType(ThemeType.Light)} />\n    )\n\n  return (\n    <Tooltip text=\"Change theme\" placement={placement} enterDelay={0}>\n      {icon}\n    </Tooltip>\n  )\n}\n\nexport { IconActionTheme }\n","import { useContext } from 'react'\nimport { ArrowDownCircle } from '@geist-ui/react-icons'\nimport { Link, Popover } from '@geist-ui/react'\nimport { DataContext } from './Data'\n\nconst IconActionJump = (props: { side?: boolean }) => {\n  const { data } = useContext(DataContext)\n\n  const content = []\n  content.push(\n    <Popover.Item key=\"title\" title>\n      Jump to\n    </Popover.Item>\n  )\n\n  if (data?.entries) {\n    content.push(\n      Object.keys(data?.entries).map((os) => (\n        <Popover.Item key={os}>\n          <Link href={'#' + os}>{os}</Link>\n        </Popover.Item>\n      ))\n    )\n  }\n\n  const placement = props.side ? 'left' : 'bottom'\n\n  return (\n    <Popover content={content} trigger=\"hover\" placement={placement} enterDelay={0}>\n      <ArrowDownCircle className=\"cursor-pointer\" size={28} />\n    </Popover>\n  )\n}\n\nexport { IconActionJump }\n","import { Fragment, useContext, useMemo, useState } from 'react'\nimport { Link, Modal, Pagination, Select, Spacer, Text, Tooltip, useModal } from '@geist-ui/react'\nimport { Filter } from '@geist-ui/react-icons'\nimport { DataContext, TranslationData, TranslationStatus } from './Data'\nimport { FileAction, tldrPageUrl } from './tldrPageUrl'\nimport { useEscClose } from './useEscClose'\n\nenum FilterType {\n  Outdated = 'outdated',\n  NotTranslated = 'not-translated',\n}\n\ntype FilterAttributes = { type: FilterType; language: string }\n\ntype FilteredPage = { os: string; page: string }\n\nconst FilterSelection = (props: {\n  initial: FilterAttributes\n  onChange: (attributes: FilterAttributes) => void\n}) => {\n  const { data } = useContext(DataContext)\n  const [type, setType] = useState(props.initial.type)\n  const [language, setLanguage] = useState(props.initial.language)\n\n  const languageOptions =\n    data?.languages.map((lang) => (\n      <Select.Option key={lang} value={lang}>\n        {lang}\n      </Select.Option>\n    )) ?? []\n\n  return (\n    <div>\n      Show\n      <Spacer inline y={0.25} />\n      <Select\n        initialValue={props.initial.type}\n        size=\"small\"\n        onChange={(value: FilterType) => {\n          setType(value)\n          props.onChange({ type: value, language })\n        }}\n      >\n        <Select.Option key=\"outdated\" value=\"outdated\">\n          ◇ outdated\n        </Select.Option>\n        <Select.Option key=\"not-translated\" value=\"not-translated\">\n          ✗ not translated\n        </Select.Option>\n      </Select>\n      <Spacer inline y={0.25} />\n      pages in the language\n      <Spacer inline y={0.25} />\n      <Select\n        initialValue={props.initial.language}\n        size=\"small\"\n        onChange={(value: string) => {\n          setLanguage(value)\n          props.onChange({ type, language: value })\n        }}\n      >\n        {languageOptions}\n      </Select>\n    </div>\n  )\n}\n\nfunction filterData(data: TranslationData, filter: FilterAttributes) {\n  const filtered: FilteredPage[] = []\n\n  for (const [osName, osStatus] of Object.entries(data.entries ?? {})) {\n    for (const [pageName, page] of Object.entries(osStatus.pages)) {\n      const status = page.status[filter.language]\n\n      let add = false\n      switch (filter.type) {\n        case FilterType.Outdated:\n          add = status === TranslationStatus.Outdated\n          break\n        case FilterType.NotTranslated:\n          add = !status\n          break\n      }\n\n      if (add) {\n        filtered.push({ os: osName, page: pageName })\n      }\n    }\n  }\n\n  return filtered\n}\n\nconst FilteredPageList = (props: { attributes: FilterAttributes; pages: FilteredPage[] }) => {\n  let action: FileAction\n  let empty: string\n  switch (props.attributes.type) {\n    case FilterType.NotTranslated:\n      action = FileAction.Create\n      empty = '✓ all pages are translated'\n      break\n    case FilterType.Outdated:\n      action = FileAction.View\n      empty = '✓ all translated pages are up-to-date'\n      break\n  }\n\n  const elements = props.pages.map((page) => (\n    <Fragment key={page.os + '/' + page.page}>\n      <Link\n        color\n        href={tldrPageUrl(action, page.os, page.page, props.attributes.language)}\n        target=\"_blank\"\n      >\n        {page.os}/{page.page}\n      </Link>\n      <br />\n    </Fragment>\n  ))\n\n  return (\n    <Text p style={{ minHeight: '25rem' }}>\n      {props.pages.length > 0 ? elements : empty}\n    </Text>\n  )\n}\n\nconst FilteredData = (props: { attributes: FilterAttributes }) => {\n  const initialPage = 1\n  const elementsPerPage = 20\n\n  const { data } = useContext(DataContext)\n  const filtered = useMemo(() => filterData(data!, props.attributes), [data, props.attributes])\n  const [pageNumber, setPageNumber] = useState(initialPage)\n\n  return (\n    <>\n      <FilteredPageList\n        attributes={props.attributes}\n        pages={filtered.slice((pageNumber - 1) * elementsPerPage, pageNumber * elementsPerPage)}\n      />\n      <Pagination\n        count={Math.ceil(filtered.length / elementsPerPage)}\n        initialPage={initialPage}\n        onChange={(page: number) => {\n          setPageNumber(page)\n        }}\n      />\n    </>\n  )\n}\n\nconst FilterUI = () => {\n  const initialAttributes: FilterAttributes = {\n    type: FilterType.Outdated,\n    language: 'en',\n  }\n  const [attributes, setAttributes] = useState(initialAttributes)\n\n  return (\n    <>\n      <FilterSelection\n        initial={initialAttributes}\n        onChange={(attributes) => {\n          setAttributes(attributes)\n        }}\n      />\n      {/* The key property is important to start the pagination for every selection at the first page */}\n      <FilteredData key={attributes.type + '-' + attributes.language} attributes={attributes} />\n    </>\n  )\n}\n\nconst IconActionFilter = (props: { side?: boolean }) => {\n  const { visible, setVisible, bindings } = useModal()\n  useEscClose(visible, setVisible)\n\n  const placement = props.side ? 'left' : 'top'\n\n  return (\n    <>\n      <Tooltip text=\"Filter\" placement={placement} enterDelay={0}>\n        <Filter\n          className=\"cursor-pointer\"\n          size={28}\n          onClick={() => {\n            setVisible(true)\n          }}\n        />\n      </Tooltip>\n      <Modal {...bindings} width=\"800px\">\n        <Modal.Title>Filter</Modal.Title>\n        <Modal.Content>\n          <FilterUI />\n        </Modal.Content>\n      </Modal>\n    </>\n  )\n}\n\nexport { IconActionFilter }\n","import { useContext, useState, useEffect } from 'react'\nimport { Checkbox, Grid, Modal, Tooltip, useModal } from '@geist-ui/react'\nimport { Bookmark } from '@geist-ui/react-icons'\nimport { useEscClose } from './useEscClose'\nimport { DataContext, Language } from './Data'\n\nconst HighlightCheckboxes = (props: {\n  highlighted: Language[]\n  onChange: (selected: Language[]) => void\n}) => {\n  const { data } = useContext(DataContext)\n\n  const checkboxes = data!.languages.map((language) => (\n    <Grid key={language} xs={6}>\n      <Checkbox value={language}>{language}</Checkbox>\n    </Grid>\n  ))\n\n  return (\n    <Checkbox.Group value={props.highlighted} onChange={props.onChange}>\n      <Grid.Container justify=\"flex-start\" gap={0.5}>\n        {checkboxes}\n      </Grid.Container>\n    </Checkbox.Group>\n  )\n}\n\nconst IconActionHighlight = (props: { side?: boolean }) => {\n  const { visible, setVisible, bindings } = useModal()\n  useEscClose(visible, setVisible)\n\n  // Columns which are being highlighted\n  const { highlighted, setHighlighted } = useContext(DataContext)\n  // We only want to apply the highlight selection once it has been confirmed, so we create a temporary store\n  const [tmpHighlighted, setTmpHighlighted] = useState(Array.from(highlighted))\n  // An extra state to begin saving the selection and applying it to the table\n  const [saving, setSaving] = useState(false)\n\n  useEffect(() => {\n    if (saving) {\n      setHighlighted(tmpHighlighted)\n      setVisible(false)\n      setSaving(false)\n    }\n  }, [saving, setHighlighted, setVisible, tmpHighlighted])\n\n  const placement = props.side ? 'left' : 'top'\n\n  return (\n    <>\n      <Tooltip text=\"Highlight\" enterDelay={0} placement={placement}>\n        <Bookmark\n          className=\"cursor-pointer\"\n          size={28}\n          onClick={() => {\n            // Populate the temporary storage with the latest data\n            setTmpHighlighted(Array.from(highlighted))\n            setVisible(true)\n          }}\n        />\n      </Tooltip>\n      <Modal {...bindings}>\n        <Modal.Title>Highlight columns</Modal.Title>\n        <Modal.Subtitle>Choose columns to highlight</Modal.Subtitle>\n        <Modal.Content>\n          <HighlightCheckboxes\n            highlighted={tmpHighlighted}\n            onChange={(selected) => setTmpHighlighted(selected)}\n          />\n        </Modal.Content>\n        <Modal.Action\n          passive\n          onClick={() => {\n            setVisible(false)\n          }}\n        >\n          Cancel\n        </Modal.Action>\n        <Modal.Action\n          onClick={() => {\n            setSaving(true)\n          }}\n          loading={saving}\n        >\n          Save\n        </Modal.Action>\n      </Modal>\n    </>\n  )\n}\n\nexport { IconActionHighlight }\n","import { Search } from '@geist-ui/react-icons'\nimport { Keyboard, Tooltip, useToasts } from '@geist-ui/react'\nimport { isIOS, isMacOs } from 'react-device-detect'\n\nconst IconActionSearch = (props: { side?: boolean }) => {\n  const [, setToast] = useToasts()\n\n  const placement = props.side ? 'left' : 'top'\n  const hotkey = isIOS || isMacOs ? <Keyboard command>f</Keyboard> : <>(ctrl + f)</>\n  const toastText = <div>Use your browser's search functionality {hotkey} to search</div>\n\n  return (\n    <Tooltip text=\"Search\" placement={placement} enterDelay={0}>\n      <Search\n        className=\"cursor-pointer\"\n        size={28}\n        onClick={() => {\n          setToast({ text: toastText })\n        }}\n      />\n    </Tooltip>\n  )\n}\n\nexport { IconActionSearch }\n","import { Col, Grid, Row } from '@geist-ui/react'\nimport { useInView } from 'react-intersection-observer'\nimport { IconActionHelp } from './IconActionHelp'\nimport { IconActionTheme } from './IconActionTheme'\nimport { IconActionJump } from './IconActionJump'\nimport { IconActionFilter } from './IconActionFilter'\nimport { IconActionHighlight } from './IconActionHighlight'\nimport { IconActionSearch } from './IconActionSearch'\nimport './IconActions.css'\n\nconst IconActions = () => {\n  const { ref, inView } = useInView()\n\n  let floatingClasses = 'floating-right'\n  if (inView) {\n    floatingClasses += ' hidden'\n  }\n\n  return (\n    <>\n      <div ref={ref}>\n        <Grid.Container gap={2} justify=\"space-between\">\n          <Grid>\n            <IconActionHelp />\n          </Grid>\n          <Grid>\n            <Row gap={0.5}>\n              <Col>\n                <IconActionTheme />\n              </Col>\n              <Col>\n                <IconActionJump />\n              </Col>\n              <Col>\n                <IconActionFilter />\n              </Col>\n              <Col>\n                <IconActionHighlight />\n              </Col>\n              <Col>\n                <IconActionSearch />\n              </Col>\n            </Row>\n          </Grid>\n        </Grid.Container>\n      </div>\n\n      <div className={floatingClasses}>\n        <Grid.Container direction=\"column\" gap={0.5}>\n          <Grid>\n            <IconActionTheme side />\n          </Grid>\n          <Grid>\n            <IconActionSearch side />\n          </Grid>\n          <Grid>\n            <IconActionFilter side />\n          </Grid>\n          <Grid>\n            <IconActionHighlight side />\n          </Grid>\n          <Grid>\n            <IconActionJump side />\n          </Grid>\n        </Grid.Container>\n      </div>\n    </>\n  )\n}\n\nexport { IconActions }\n","import { CssBaseline, GeistProvider, Page, Text } from '@geist-ui/react'\nimport { ThemeTypeProvider, useThemeType } from './ThemeType'\nimport { DataFetcher } from './Data'\nimport { DataTable } from './Table'\nimport { AppLoader } from './AppLoader'\nimport { ErrorMessage } from './ErrorMessage'\nimport { AppFooter } from './AppFooter'\nimport { IconActions } from './IconActions'\nimport 'inter-ui/inter.css'\nimport './App.css'\n\nconst App = () => (\n  <ThemeTypeProvider>\n    <GeistApp />\n  </ThemeTypeProvider>\n)\n\nconst GeistApp = () => {\n  const themeType = useThemeType()\n\n  return (\n    <GeistProvider themeType={themeType}>\n      <CssBaseline />\n      <Page size=\"large\" style={{ minHeight: '1px' }} className={themeType}>\n        <Page.Header>\n          <Text h1>tldr translation progress</Text>\n        </Page.Header>\n        <Page.Content>\n          <DataFetcher loading={<AppLoader />} error={<ErrorMessage />}>\n            <IconActions />\n            <DataTable />\n          </DataFetcher>\n        </Page.Content>\n        <Page.Footer style={{ position: 'static' }}>\n          <AppFooter />\n        </Page.Footer>\n      </Page>\n    </GeistProvider>\n  )\n}\n\nexport { App }\n","import { StrictMode } from 'react'\nimport * as ReactDOM from 'react-dom'\nimport { App } from './App'\n\n// Learn more about TypeScript + React:\n// https://2ality.com/2018/04/type-notation-typescript.html\n// https://github.com/typescript-cheatsheets/react#section-1-setup-typescript-with-react\n// https://create-react-app.dev/docs/adding-typescript/\n\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  document.querySelector('#root')\n)\n"],"sourceRoot":""}