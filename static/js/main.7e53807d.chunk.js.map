{"version":3,"sources":["Data.tsx","Table.tsx","App.tsx","index.tsx"],"names":["TranslationStatus","DataContext","React","ErrorMessageContext","DataFetcher","props","error","setError","isLoaded","setIsLoaded","data","setData","fetch","then","r","ok","Error","status","statusText","json","result","toString","Provider","value","children","loading","JumpList","listItems","Object","keys","entries","map","index","array","href","className","length","DataTable","DataTableHeader","DataTableBody","languageRows","languages","lang","osSections","os","DataTableOSHeader","DataTableOSPages","osProgress","progress","percentages","id","osPages","pages","page","DataTableOSPageRow","pageName","GitHubFileAction","pageData","handleClick","action","language","win","window","open","getGitHubPageUrl","focus","cells","onClick","create","Translated","view","Outdated","baseUrl","filePath","Footer","last_update","App","Loading","ErrorMessage","Legend","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7e53807d.chunk.js","sourcesContent":["import * as React from \"react\";\r\n\r\n// https://reactjs.org/docs/faq-ajax.html\r\n// https://reactjs.org/docs/hooks-reference.html#usecontext\r\n\r\nenum TranslationStatus {\r\n    Outdated = 1,\r\n    Translated = 2,\r\n}\r\n\r\ntype OperatingSystem = string;\r\ntype Language = string;\r\ntype PageName = string;\r\n\r\ninterface TranslationData {\r\n    last_update: string,\r\n    languages: Language[],\r\n    entries: Record<OperatingSystem, TranslationOS>,\r\n}\r\n\r\ninterface TranslationOS {\r\n    progress: Record<Language, number>,\r\n    pages: Record<PageName, TranslationPage>,\r\n}\r\n\r\ninterface TranslationPage {\r\n    status: Record<Language, TranslationStatus>,\r\n}\r\n\r\nconst DataContext = React.createContext<TranslationData | null>(null);\r\nconst ErrorMessageContext = React.createContext<string | null>(null);\r\n\r\n// We're using React.ReactElement & React.ReactNode instead of JSX.Element: https://stackoverflow.com/a/47899926/4106848\r\ntype DataFetcherProps = { error: React.ReactElement, loading: React.ReactElement, children: React.ReactNode };\r\nconst DataFetcher = (props: DataFetcherProps) => {\r\n    const [error, setError] = React.useState<string | null>(null);\r\n    const [isLoaded, setIsLoaded] = React.useState<boolean>(false);\r\n    const [data, setData] = React.useState<TranslationData | null>(null);\r\n\r\n    // [] = only run on component mount\r\n    React.useEffect(() => {\r\n        fetch(\"data.json\")\r\n            .then(r => {\r\n                if (!r.ok)\r\n                    throw new Error(r.status + ': ' + r.statusText);\r\n\r\n                return r.json();\r\n            })\r\n            .then(\r\n                (result) => {\r\n                    setData(result as TranslationData);\r\n                    setIsLoaded(true);\r\n                },\r\n\r\n                (error) => {\r\n                    setError(error.toString());\r\n                    setIsLoaded(true);\r\n                });\r\n    }, []);\r\n\r\n    if (error) {\r\n        return <ErrorMessageContext.Provider value={error}>\r\n            {props.error}\r\n        </ErrorMessageContext.Provider>\r\n    } else if (!isLoaded) {\r\n        return props.loading\r\n    } else {\r\n        return <DataContext.Provider value={data}>\r\n            {props.children}\r\n        </DataContext.Provider>\r\n    }\r\n}\r\n\r\nexport {DataFetcher, DataContext, TranslationStatus, ErrorMessageContext};\r\nexport type {OperatingSystem, Language, PageName};\r\n","import {DataContext, OperatingSystem, TranslationStatus} from \"./Data\";\r\nimport * as React from \"react\";\r\n\r\nconst JumpList = () => {\r\n    const data = React.useContext(DataContext);\r\n\r\n    const listItems = Object.keys(data!.entries).map((value, index, array) =>\r\n        <a href={'#' + value} className=\"hover:text-blue-500\" key={value}>\r\n            {value}{index < array.length - 1 ? ' - ' : ''}\r\n        </a>\r\n    );\r\n\r\n    return <div className=\"my-10\">\r\n        <h3 className=\"text-2xl p-5\">Quick Jump List</h3>\r\n        {listItems}\r\n    </div>\r\n}\r\n\r\nconst DataTable = () =>\r\n    <table className=\"text-center border-opacity-50 mx-auto\">\r\n        <DataTableHeader/>\r\n        <DataTableBody/>\r\n    </table>;\r\n\r\nconst DataTableHeader = () => {\r\n    const data = React.useContext(DataContext);\r\n\r\n    // We're applying the sticky class to each <th>, because Chrome does not support sticky on <thead> and <tr>\r\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=702927\r\n    const languageRows = data!.languages.map((lang) =>\r\n        <th className=\"px-2 py-4 sticky -top-1 bg-white bg-opacity-90 bg-clip-padding\" key={lang}>{lang}</th>);\r\n\r\n    return <thead className=\"border border-gray-200\">\r\n    <tr>\r\n        <th className=\"px-2 py-4 bg-white\">page</th>\r\n        {languageRows}\r\n    </tr>\r\n    </thead>\r\n}\r\n\r\nconst DataTableBody = () => {\r\n    const data = React.useContext(DataContext);\r\n\r\n    const osSections = Object.keys(data!.entries).map((os) =>\r\n        <React.Fragment key={os}>\r\n            <DataTableOSHeader os={os}/>\r\n            <DataTableOSPages os={os}/>\r\n        </React.Fragment>\r\n    );\r\n\r\n    return <tbody className=\"text-sm\">{osSections}</tbody>\r\n}\r\n\r\ninterface OsProps {\r\n    os: OperatingSystem,\r\n}\r\n\r\ninterface OsPageProps extends OsProps {\r\n    pageName: string,\r\n}\r\n\r\nconst DataTableOSHeader = ({os}: OsProps) => {\r\n    const data = React.useContext(DataContext);\r\n    const osProgress = data!.entries[os].progress;\r\n\r\n    const percentages = data!.languages\r\n        .map((lang) => <td className=\"px-1 py-2\" key={lang}>{osProgress[lang]}%</td>);\r\n\r\n    return <tr className=\"border border-gray-200 bg-indigo-300 p-4\">\r\n        <th className=\"text-base px-1 py-2\" id={os}>{os}</th>\r\n        {percentages}\r\n    </tr>\r\n}\r\n\r\nconst DataTableOSPages = ({os}: OsProps) => {\r\n    const data = React.useContext(DataContext);\r\n    const osPages = data!.entries[os].pages;\r\n\r\n    const pages = Object.keys(osPages)\r\n        .map((page) => <DataTableOSPageRow os={os} pageName={page} key={page}/>);\r\n\r\n    return <>{pages}</>;\r\n}\r\n\r\nenum GitHubFileAction {\r\n    view,\r\n    create\r\n}\r\n\r\nconst DataTableOSPageRow = ({os, pageName}: OsPageProps) => {\r\n    const data = React.useContext(DataContext);\r\n    const pageData = data!.entries[os].pages[pageName];\r\n\r\n    function handleClick(action: GitHubFileAction, language: string) {\r\n        const win = window.open(getGitHubPageUrl(action, os, pageName, language));\r\n        if (win != null)\r\n            win.focus();\r\n    }\r\n\r\n    const cells = data!.languages.map((lang) => {\r\n        if (lang in pageData.status) {\r\n            const status = pageData.status[lang];\r\n            switch (status) {\r\n                case TranslationStatus.Translated:\r\n                    return <td className=\"bg-green-200 cursor-pointer\" key={lang}\r\n                               onClick={() => handleClick(GitHubFileAction.view, lang)}>✔</td>\r\n                case TranslationStatus.Outdated:\r\n                    return <td className=\"bg-yellow-200 cursor-pointer\" key={lang}\r\n                               onClick={() => handleClick(GitHubFileAction.view, lang)}>⚠</td>\r\n                default:\r\n                    return <td>?</td>\r\n            }\r\n        } else {\r\n            return <td className=\"bg-red-200 cursor-pointer\" key={lang}\r\n                       onClick={() => handleClick(GitHubFileAction.create, lang)}>✖</td>\r\n        }\r\n    });\r\n\r\n    return <tr className=\"border border-gray-200\">\r\n        <td className=\"text-left text-base p-1\">{pageName}</td>\r\n        {cells}\r\n    </tr>\r\n}\r\n\r\nconst getGitHubPageUrl = (action: GitHubFileAction, os: string, page: string, language: string) => {\r\n    const languageSuffix = language === 'en' ? '' : '.' + language\r\n\r\n    const baseUrl = \"https://github.com/tldr-pages/tldr\";\r\n    const filePath = `/master/pages${languageSuffix}/${os}/${page}.md`\r\n\r\n    if (action === GitHubFileAction.create) {\r\n        return baseUrl + \"/new\" + filePath + `?filename=${page}.md`;\r\n    } else if (action === GitHubFileAction.view) {\r\n        return baseUrl + \"/blob\" + filePath;\r\n    } else {\r\n        throw new Error('Unknown GitHubFileAction: ' + action);\r\n    }\r\n}\r\n\r\nconst Footer = () => {\r\n    const data = React.useContext(DataContext);\r\n\r\n    return (\r\n        <div className=\"my-6 text-center text-gray-700\">\r\n            Thanks for using this site •\r\n            Generated by <a href=\"https://github.com/LukWebsForge/TldrProgress\">tldr-translation-progress</a> •\r\n            Last updated {data!.last_update}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport {JumpList, DataTable, Footer};\r\n","import {DataFetcher, ErrorMessageContext} from \"./Data\";\r\nimport {DataTable, Footer, JumpList} from \"./Table\";\r\nimport * as React from \"react\";\r\n\r\nconst App = () =>\r\n    <div className=\"container mx-auto text-center\">\r\n        <h1 className=\"font-bold text-4xl m-10\">tldr translation progress</h1>\r\n        <DataFetcher loading={<Loading/>} error={<ErrorMessage/>}>\r\n            <Legend/>\r\n            <JumpList/>\r\n            <DataTable/>\r\n            <Footer/>\r\n        </DataFetcher>\r\n    </div>;\r\n\r\nconst Legend = () =>\r\n    <div className=\"mt-2\">\r\n        <h3 className=\"text-2xl p-5\">Legend</h3>\r\n        <table className=\"border-collapse mx-auto\">\r\n            <tbody>\r\n            <tr>\r\n                <td className=\"border-b border-gray-400 px-4 py-2\">✔</td>\r\n                <td className=\"border-b border-gray-400 px-4 py-2\">translated & same number of entries as the\r\n                    english version\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td className=\"border-b border-gray-400 px-4 py-2\">⚠</td>\r\n                <td className=\"border-b border-gray-400 px-4 py-2\">not up-to-date (different number of entries than\r\n                    the english version)\r\n                </td>\r\n            </tr>\r\n            <tr>\r\n                <td className=\"px-4 py-2\">✖</td>\r\n                <td className=\"px-4 py-2\">not translated</td>\r\n            </tr>\r\n            </tbody>\r\n        </table>\r\n    </div>;\r\n\r\nconst Loading = () =>\r\n    <div className=\"text-3xl text-blue-400\">\r\n        Loading ...\r\n    </div>;\r\n\r\nconst ErrorMessage = () => {\r\n    const error = React.useContext(ErrorMessageContext);\r\n\r\n    return (\r\n        <div className=\"text-2xl text-red-400\">\r\n            Unable to load the data ): <br/>\r\n            <div className=\"text-lg\">{error}</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport {App}\r\n","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport {App} from './App';\r\n\r\n// Learn more about TypeScript + React:\r\n// https://2ality.com/2018/04/type-notation-typescript.html\r\n// https://github.com/typescript-cheatsheets/react#section-1-setup-typescript-with-react\r\n// https://create-react-app.dev/docs/adding-typescript/\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}